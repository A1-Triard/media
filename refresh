#!/bin/sh
set -eu

echo__() {
    printf "%s\n" "$1"
}

linux_is_removable() {
    dev="$(echo__ "$1" | /usr/bin/sed -E 's/[0-9]+$//')"
    removable_flag=/sys/block/"$dev"/removable

    if [ -r "$removable_flag" ]; then
        /usr/bin/cat -- "$removable_flag"
    else
        echo 0
    fi
}

linux_on_mount() {
    point="${1}/${2}"
    umount="${1}/umount_${2}"
    echo "#!/bin/sh" > "$umount"
    {
        echo "set -eu"
        echo "/usr/bin/pumount -- \"$point\" || { /bin/sleep 3; exit 1; }"
        echo "/bin/rm -f -- \"$point\""
        echo "/bin/rm -f -- \"$umount\""
    } >> "$umount"
    /bin/chmod a+x -- "$umount"
    echo__ "$3 -> $point"
}

bsd_on_mount() {
    point="${1}/${2}"
    umount="${1}/umount_${2}"
    echo "#!/bin/sh" > "$umount"
    {
        echo "set -eu"
        echo "/sbin/umount -- \"$point\" || { read -rt 3 stub; exit 1; }"
        echo "/bin/rmdir -- \"$point\" || true"
        echo "/bin/rm -f -- \"$umount\""
    } >> "$umount"
    /bin/chmod a+x -- "$umount"
    echo__ "$3 -> $point"
}

if [ -x /bin/uname ]; then
    system="$(/bin/uname)"
elif [ -x /usr/bin/uname ]; then
    system="$(/usr/bin/uname)"
else
    echo "Cannot execute 'uname'."
    exit 1
fi

mount_list="$(/usr/bin/findmnt -nc -o SOURCE)"

point_dir="$(echo__ "$HOME/media" | /usr/bin/sed -E 's/[^/A-Za-z0-9]//g')"

case "$system" in
Linux)
    dev_list=$(/usr/bin/find /dev -maxdepth 1 -regex '/dev/[sh]d[a-z]+[0-9]*' -print | /usr/bin/sort -r)
    for dev in $dev_list; do
        dev_name="$(/usr/bin/basename -- "$dev")"
        is_removable="$(linux_is_removable "$dev_name")"
        if [ "$is_removable" = 1 ]; then
            # $dev does not contain dangerous chars, so the following grep is safe
            if echo__ "$mount_list" | { ! /bin/grep -qe ^"$dev"'$'; }; then
                point="$point_dir/$dev_name"
                if ! [ -e "$point" ]; then
                    if /usr/bin/pmount -A -c utf8 -- "$dev" 2>/dev/null; then
                        /bin/mkdir -p -- "$point_dir" \
                            && /bin/ln -s -- /media/"$dev_name" "$point" \
                            && linux_on_mount "$point_dir" "$dev_name" "$dev"
                    fi
                fi
            fi
        fi
    done
    /bin/sleep 1
    ;;
FreeBSD)
    dev_list=$(/usr/bin/find /dev -depth 1 -regex '/dev/da[0-9]+(s[0-9]+)?' -print | /usr/bin/sort -r)
    for dev in $dev_list; do
        # $dev does not contain dangerous chars, so the following grep is safe
        if echo__ "$mount_list" | { ! /usr/bin/grep -qe ^"$dev"'$'; }; then
            dev_name="$(/usr/bin/basename -- "$dev")"
            point="$point_dir/$dev_name"
            mount_point_list="$(/usr/bin/findmnt -nlc -o TARGET)"
            # $point does not contain dangerous chars, so the following grep is safe
            if echo__ "$mount_point_list" | { ! /usr/bin/grep -qe ^"$point"'$'; }; then
                if (/usr/local/bin/ntfsinfo -m -- "$dev" > /dev/null 2>&1); then
                    if /bin/mkdir -p -- "$point"; then
                        if /sbin/mount_fusefs -- auto "$point" ntfs-3g "$dev" "$point"; then
                            bsd_on_mount "$point_dir" "$dev_name" "$dev"
                        else
                            /bin/rmdir -- "$point" || true
                        fi
                    fi
                elif /usr/bin/file -Ls -- "$dev" | /usr/bin/grep -q FAT; then
                    if /bin/mkdir -p -- "$point"; then
                        if /sbin/mount_msdosfs -L "$LANG" -D CP866 -o rw -- "$dev" "$point"; then
                            bsd_on_mount "$point_dir" "$dev_name" "$dev"
                        else
                            /bin/rmdir -- "$point" || true
                        fi
                    fi
                fi
            fi
        fi
    done
    read -rt 1 stub
    ;;
*)
    echo "Unknown system '$system'."
esac
